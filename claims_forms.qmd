# Claim Forms

Claim forms are used to report the procedures performed and the reason the procedures were performed to the insurance carrier to obtain payment for those services. There are two claim forms used; the **CMS-1500** (sometimes referred to as a **HCFA**) and the CMS-1450 (more commonly known as the **UB-04**). The CMS-1500 is used to . The UB-04 is used to report facility (hospital) services.

<br>

# CMS-1500

The CMS-1500 claim form is used to report the professional services performed by physicians, non-physician practitioners (NPP), and Ambulatory Surgical Centers (ASCs) to all payers. For this example, I'll load the `provider` package and use several of it's functions to fill out the Items pertaining to the physician.

```{r setup}
#| message: false
#| warning: false
library(provider)
library(tidyverse)
library(knitr)
```

I've chosen a provider at random and I'll go ahead and retrieve his NPPES information:

```{r}
nppes <- nppes_npi(npi = 1730455775)
```

<br>

## Item 17

> Enter the name of the *referring* or *ordering* physician if applicable. 
> The name should be entered as First Name, Middle Initial, Last Name, followed by the provider’s credentials. 
> Do not use commas or periods. Enter the applicable qualifier to the left of the vertical dotted line. 
> In addition, the supervising physician can also be reported in this field. 
> When multiple providers are involved, enter one provider using the following priority order:

   1. `DN` Referring Provider
   2. `DK` Ordering Provider
   3. `DQ` Supervising Provider

<br>

If Dr. Abbott is the Referring or Ordering Provider on this claim, we may want to check if he is eligible to do so. We can do that with the `order_refer()` function:

```{r}
order_refer(npi = 1730455775) |> 
  kable()
```

<br>

He's not only eligible to refer patients to Medicare Part B or a Home Health Agency (HHA), he's also eligible to order Durable Medical Equipment (DME) or Power Mobility Devices (PMD) for them.

<br>

```{r}
nppes |> 
  select(npi, first_name:credential) |> 
  distinct() |> 
  kable()
```

<br>

### Item 17a

> Enter the Other ID number of the referring, ordering, or supervising provider. 
> Enter the qualifier to indicate what number is being reported:

   * `0B`  State License Number
   * `1G`  Provider UPIN Number (no longer used, replaced by the NPI)
   * `G2`  Provider Commercial Number
   * `LU`  Location Number (used for the supervising provider only)
   * `ZZ`  Taxonomy Code (paper claims)
   * `PXC` Taxonomy Code (electronic claims)

<br>

### Item 17b

> Enter the NPI of the referring/ordering/supervising physician or non-physician practitioner listed in item 17.
> NPIs are required for all providers and facilities.

<br>

## Item 24I

> Enter the qualifier identifying if the number is a non-NPI. 
> The qualifier identifies what type of number is used in 24J.

<br>

## Item 24J

> Enter the non-NPI number in the shaded area of the field and 
> enter the rendering provider’s NPI number in the unshaded portion.


```{r}
nppes |> 
  select(contains("tx"), -tx_group) |> 
  distinct() |> 
  kable()
```

<br>

## Item 25

> Enter the TIN (EIN or SSN) of the provider of service or supplier and check the appropriate check box. 
> A common reason for claims rejection is the Tax ID not being associated with the billing provider’s NPI.

<br>

## Item 27

> Check the appropriate block to indicate whether the provider of service or supplier accepts assignment.

If this is a Medicare claim, we can check to see if the doctor and/or his group accepts assignment using the `doctors_and_clinicians()` function:

```{r}
doctors_and_clinicians(npi = 1730455775) |> 
  select(ind_assn, group_assn) |> 
  kable()
```

<br>

## Item 32

> Enter the address where the services were provided if different from the billing provider’s address.

This is where things become a little more complicated. Of course we have the doctor's practice and secondary location addresses from NPPES:

```{r}
nppes |> 
  select(purpose, 
         street, 
         city, 
         state) |> 
  filter(purpose != "MAILING") |> 
  distinct() |> 
  kable()
```

<br>

But he may be billing through a group or organization NPI. It's difficult to find a definitive answer to this question using publicly available data, but there are a couple of options. First we can use the `revalidation_reassign()` function to search his Medicare revalidation date record:

<br>

```{r}
revalidation_reassign(npi = 1730455775) |> 
  select(pac_id_group,
         enroll_id_group,
         business_name,
         state_group) |> 
  kable()
```

<br>

Great, this gives us three groups that he's a part of. We can get the groups' NPIs with the `provider_enrollment()` function:

<br>

```{r}
bind_rows(
  provider_enrollment(pac_id = "5597867184", 
                      enroll_id = "O20150219000942"), 
  provider_enrollment(pac_id = "7012187925",
                      enroll_id = "O20110901000656"), 
  provider_enrollment(pac_id = "4183607252",
                      enroll_id = "O20040609001506")) |> 
  select(npi, 
         org_name,
         specialty_desc, 
         state) |> 
  kable()
```

<br>

### Baptist Health Medical Group Inc.

```{r}
baptist <- nppes_npi(npi = 1922401611)
```


::: {.panel-tabset}

## Basic

```{r}
baptist |> 
  select(org_name = organization_name,
         entype,
         enum_date = enumeration_date,
         org_subpart = organizational_subpart) |> 
  distinct() |> 
  kable()
```

## Addresses

```{r}
baptist |> 
  select(purpose,
         street,
         city,
         state,
         phone_number,
         fax_number) |> 
  distinct() |> 
  kable()
```

## AO

```{r}
baptist |> 
  select(ao_first_name = authorized_official_first_name,
         ao_middle_name = authorized_official_middle_name,
         ao_last_name = authorized_official_last_name,
         ao_title = authorized_official_title_or_position) |> 
  distinct() |> 
  kable()
```


## Taxonomies

```{r}
baptist |> 
  select(tx_code,
         tx_desc,
         tx_group,
         tx_state,
         tx_license,
         tx_primary) |> 
  distinct() |> 
  kable()
```

:::

<br>

### Fairview Physicians Network LLC

```{r}
fairview <- nppes_npi(npi = 1821385329)
```

::: {.panel-tabset}

## Basic

```{r}
fairview |> 
  select(org_name = organization_name,
         entype,
         enum_date = enumeration_date,
         org_subpart = organizational_subpart) |> 
  distinct() |> 
  kable()
```

## Addresses

```{r}
fairview |> 
  select(purpose,
         street,
         city,
         state,
         phone_number,
         fax_number) |> 
  distinct() |> 
  kable()
```


## AO

```{r}
fairview |> 
  select(ao_first_name = authorized_official_first_name,
         ao_last_name = authorized_official_last_name,
         ao_title = authorized_official_title_or_position) |> 
  distinct() |> 
  kable()
```


## Taxonomies

```{r}
fairview |> 
  select(tx_code,
         tx_desc,
         tx_group,
         tx_state,
         tx_license,
         tx_primary) |> 
  distinct() |> 
  kable()
```

:::

<br>

### Jennie Stuart Medical Center Inc.

```{r}
jennie <- nppes_npi(npi = 1235139312)
```

::: {.panel-tabset}

## Basic

```{r}
jennie |> 
  select(org_name = organization_name,
         entype,
         enum_date = enumeration_date,
         org_subpart = organizational_subpart) |> 
  distinct() |> 
  kable()
```


## Addresses

```{r}
jennie |> 
  select(purpose,
         street,
         city,
         state,
         phone_number,
         fax_number) |> 
  distinct() |> 
  kable()
```


## AO

```{r}
jennie |> 
  select(ao_first_name = authorized_official_first_name,
         ao_middle_name = authorized_official_middle_name,
         ao_last_name = authorized_official_last_name,
         ao_title = authorized_official_title_or_position) |> 
  distinct() |> 
  kable()
```


## Taxonomies

```{r}
jennie |> 
  select(tx_code,
         tx_desc,
         tx_group,
         tx_state,
         tx_license,
         tx_primary) |> 
  distinct() |> 
  kable()
```

:::

<br>

### Item 32a

> If required by the payer, enter the facility’s NPI.

### Item 32b

> Enter the qualifier identifying the non-NPI number followed by the ID number.

## Item 33

> Enter the provider of service/supplier’s billing name, address, 9-digit ZIP code (without the hyphen), and telephone number. 
> The billing provider's address must be a physical address, not a P.O. Box number.

### Item 33a

> Enter the NPI of the billing provider or group.

### Item 33b

> Enter the qualifier identifying the non-NPI number followed by the ID number:

   * `0B`  State License Number
   * `G2`  Provider Commercial Number
   * `ZZ`  Taxonomy Code (paper claims)
   * `PXC` Taxonomy Code (electronic claims)



```{r}
aff <- facility_affiliations(npi = 1730455775)

aff |> select(facility_type,
              facility_ccn)
```

```{r}
hosp <- hospital_enrollment(facility_ccn = 180051)

hosp |> select(org_name, 
               org_structure, 
               address, 
               city, 
               state, 
               location_type, 
               multiple_npis) |> 
  glimpse()
```